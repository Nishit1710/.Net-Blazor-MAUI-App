@page "/AddEvent"


@inject NavigationManager NavigationManager

<h1>Add Event</h1>

<form @onsubmit="AddEvents" class="event-form">
    <div class="form-group">
        <label for="ticketCost">Ticket Cost:</label>
        <input type="number" id="ticketCost" @bind="newEvent.TicketCost" />
    </div>

    <div class="form-group">
        <label for="genre">Genre:</label>
        <input type="text" id="genre" @bind="newEvent.Genre" />
    </div>

    <div class="form-group">
        <label for="artist">Artist:</label>
        <input type="text" id="artist" @bind="newEvent.Artist" />
    </div>

    <div class="form-group">
        <label for="date">Date:</label>
        <input type="date" id="date" @bind="newEvent.Date" />
    </div>

    <div class="form-group">
        <label for="time">Time:</label>
        <input type="time" id="time" value="@newEvent.Time.ToString(@"hh\:mm")" @oninput="UpdateEventTime" />
    </div>

    <div class="form-group">
        <label for="venue">Venue:</label>
        <input type="text" id="venue" @bind="newEvent.Venue" />
    </div>

    <div class="form-group">
        <label for="city">City:</label>
        <input type="text" id="city" @bind="newEvent.City" />
    </div>

    <div class="form-group">
        <label for="description">Description:</label>
        <textarea id="description" @bind="newEvent.Description"></textarea>
    </div>

    <button type="submit" class="btn-submit">Add Event</button>
</form>

<style>
    .event-form {
        max-width: 400px;
        margin: 0 auto;
    }

    .form-group {
        margin-bottom: 20px;
    }

    label {
        display: block;
        font-weight: bold;
        margin-bottom: 5px;
    }

    input[type="text"],
    input[type="number"],
    textarea {
        width: 100%;
        padding: 10px;
        border: 1px solid #ccc;
        border-radius: 5px;
    }

    .btn-submit {
        background-color: #007bff;
        color: white;
        border: none;
        padding: 10px 20px;
        border-radius: 5px;
        cursor: pointer;
    }
</style>

@code {
    private ConcertEvent newEvent = new ConcertEvent();

    private void AddEvents()
    {
        string connectionString = "server=localhost; port=3306; database=Nishit; user=root; password=password";
        EventsManager eventsManager = new EventsManager(connectionString);


        eventsManager.AddConcertEvent(newEvent);
        NavigationManager.NavigateTo("/Events");
    }
    private void UpdateEventTime(ChangeEventArgs e)
    {
        if (TimeSpan.TryParse((string)e.Value, out TimeSpan time))
        {
            newEvent.Time = time;
        }
    }


}